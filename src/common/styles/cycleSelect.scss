@use "mixins/measures";
@use "mixins/colors.module";
// Styling for the icon-based select element

.CycleSelect-container {
  width: measures.$CycleSelect-size;
  height: measures.$CycleSelect-size;
  border-radius: 64px;
  border-style: solid;
  border-width: clamp(2px, min(0.3vw, 0.2vh), 3.5px);
  box-sizing: border-box;

  align-self: center;
  justify-self: center;
}

.CycleSelect-inner-container {
  width: inherit !important;
  height: inherit !important;

  // HACK: invisible border to allow clicking on the border of the selector
  border-radius: 64px;
  border-style: solid;
  border-width: thick;
  border-color: inherit; // fallback if no opacity support
  border-color: rgba(0, 0, 0, 0);

  top: -5px;
}

.CycleSelect-container {
  &.CycleSelect-disabled {
    cursor: not-allowed !important;

    color: rgba(0, 0, 0, 0.8);

    &:after {
      content: '';
      position: absolute;
      bottom: 2px;
      left: 2px;
      border-top-width: thick;
      border-top-style: solid;
      width: measures.$CycleSelect-size;
      transform: rotate(-45deg);
      transform-origin: 0% 0%;
    }

    & > .CycleSelect-inner-container {
      pointer-events: none !important;
    }

    & img {
      filter: grayscale(100%) contrast(60%);
    }
  }
}

.CycleSelect-container {
  display: grid;
}

.CycleSelect-inner-container {
  display: flex;
}

.CycleSelect-container,
.CycleSelect-inner-container {
  position: relative;
  justify-content: center;

  cursor: pointer;
}

.CycleSelect-inner-container {
  width: 100%;
  height: 100%;
}

.CycleSelect-container img {
  position: absolute;
  align-self: center;
  width: 65%;
  padding-bottom: 2px;

  visibility: hidden;

  &.CycleSelect-visible {
    visibility: visible;
  }
}
