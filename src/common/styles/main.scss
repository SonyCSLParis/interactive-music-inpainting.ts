// TODO(theis, 2020/12/10): check/clean-up usage of .advanced class
// children nodes should inherit the appropriate behaviour from their container
// and note require setting the class on all nodes

@use "mixins/colors.module";
@use "mixins/measures";
@use "mixins/fonts";

html,
body {
  height: 100%;
  margin: 0;
  overflow: hidden;
}

html {
  // default theme, also used on the splash-screen
  @include colors.theme-colors(dark-lavender);
}

body.running {
  &.nonoto {
    @include colors.theme-colors(millenial-pink);
  }
  &.notono {
    &.dark {
      @include colors.theme-colors(dark-lavender);
    }
    &.light {
      @include colors.theme-colors(lavender);
    }
  }
}

body {
  font-family: fonts.$interface-font-stack;

  // disable blue box over objects on touch
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-tap-highlight-color: transparent;

  user-select: none;
  z-index: 0;

  &.busy {
    cursor: wait !important;

    & #loading-spinner {
      display: inline-block;
    }
  }
}

body.notono {
  .simplebar-track.simplebar-vertical {
    display: none;
  }
}

.simplebar-track {
  font-size: x-large;
  display: flex;
  justify-content: center;

  &::before {
    font-family: "FontAwesome";
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    align-self: center;
    content: "\F3c1";
    border-radius: 100%;
    pointer-events: auto;
    cursor: pointer;
  }
  &.scroll-lock::before {
    content: "\F023";
  }

  &.simplebar-horizontal::before {
    height: 1.6em;
    width: fit-content;
    left: calc(-1.8em - 1.5vw);

    padding-right: 0.3em;
    padding-left: 0.3em;
  }

  &.simplebar-vertical::before {
    width: 1.6em;
    height: fit-content;
    top: calc(-1.6em - 1.5vh);

    padding-top: 0.3em;
    padding-bottom: 0.3em;
    margin-bottom: 2em;
  }
}


body.notono, body.nonoto {
  .simplebar-track.simplebar-vertical::before {
    display: none;
  }
}


img {
  -webkit-user-drag: none;
}

[nexus-ui] select *,
[nexus-ui] input * {
  font-family: fonts.$interface-font-stack !important;
}

[nexus-ui] * {
  font-weight: fonts.$interface-font-weight !important;
}

[nexus-ui] input {
  font-weight: 700 !important;
}

#app {
  display: grid;
  grid-template-rows: auto 1fr auto;
  grid-template-columns: auto;
  height: 100%;
  // width: 100vw;
  grid-template-areas:
    'header'
    'main'
    'footer';

  @media screen and (max-height: 300px) {
    grid-template-areas:
      'main'
      'footer';

    header {
      display: none;
    }
  }
}

#app > header {
  grid-area: header;
}

#app > #main-panel {
  grid-area: main;
  overflow: hidden; // ensures the main panel does not push the footer down
}

#app > footer {
  grid-area: footer;
}

header, #main-panel, footer {
  width: 100vw;
}

#main-panel {
  position: relative !important;
  z-index: 0;
  display: flex;
}

#loading-spinner {
  position: absolute;
  align-self: center;
  display: none;
}

$trapezoid-perspective-transform: perspective(10px) rotateX(8deg);

#bottom-controls {
  .expand-tab {
    position: absolute;
    cursor: pointer;
    width: 15%;
    height: measures.$expand-tab-height;
    top: calc(0px - #{measures.$expand-tab-height});
    overflow: hidden;

    &::before {
      position: absolute;
      content: '⬆';
    }

    font-size: large;
    display: flex;
    align-content: center;
    justify-content: center;
    transition-property: top, height;
    transition-duration: 0.1s;
    animation-timing-function: ease-in;
    left: 50%;
    z-index: -1;
    border-radius: 5px 5px 0 0;

    // translateZ is used to ensure the content is behind the parent container
    // this is required since the parent container creates a stacking context
    // furthermore the Z-axis translation should happen before the trapezoid transform,
    // otherwise it messes up the perspective
    transform: translateZ(-1000px) translate(-50%, 0)
      $trapezoid-perspective-transform;

    @media (hover: hover) {
      // enable show on hover if device supports hovering;
      height: calc(#{measures.$expand-tab-height} / 2);
      top: calc(0px - #{measures.$expand-tab-height} / 2);
    }

    &:hover {
      // transform: translate(-50%, 0);
      height: measures.$expand-tab-height;
      top: calc(0px - #{measures.$expand-tab-height});
    }
  }

  display: grid;
  transform-style: preserve-3D;
  margin-top: calc(#{measures.$expand-tab-height} / 2);
  padding-top: calc(#{measures.$expand-tab-height} / 4);
  grid-template-columns: repeat(4, 25%);
  grid-template-rows: 2.5fr 1fr 0 0 1vh;
  @media screen and (max-width: 270px) {
    grid-template-rows: 2.5fr 0 1vh;
  }
  align-items: center;
  justify-items: center;
  z-index: 0;

  opacity: 1;

  box-shadow: 0px -1px 3px 0px rgba(0, 0, 0, 0.21);

  text-align: center;
}

.control-label {
  @media screen and (max-width: 270px) {
    display: none;
  }
}

.advanced {
  &,
  & .control-item,
  & .control-label {
    visibility: collapse;
    opacity: 0;
  }
}

body:not(.help-tour-on) .trip-block {
  // ensures the trip-block takes up no space in the layout
  display: none !important;
}

body.help-tour-on {
  .expand-tab {
    // disable advanced controls expansion tab when browsing the help menu,
    // we automatically expand all controls to show the help
    visibility: hidden;
  }
}

body.advanced-controls {
  #bottom-controls {
    grid-template-rows: 2.5fr 1fr 2.5fr 1fr 1vh;

    .expand-tab {
      &::before {
        position: absolute;
        content: '⬇';
      }
    }
  }

  .advanced {
    visibility: visible;
    opacity: 1;
    .control-item,
    .control-label {
      visibility: visible;
      opacity: 1;
    }
  }
}

select {
  font-family: inherit;
  font-weight: bold;
  font-size: large !important;
  text-transform: capitalize;
  text-align-last: center; // see https://stackoverflow.com/a/34532555
}

.grid-auto-column {
  align-items: center;
  justify-items: center;
  display: grid;
  width: 100%;
  grid-auto-flow: column;
  row-gap: 5%;
}

.disabled {
  color: lightgray;
  cursor: not-allowed;

  & * {
    pointer-events: none !important;
  }
}

#lfo-controls {
  display: grid;
  width: 40%;
  grid-template-columns: repeat(3, 1fr);
  text-align: center;
}

#granularity-select-container--whole-note {
  width: 45%;
}

#edit-tool-select-container--top,
#edit-tool-select-container--bottom {
  width: 60%;
}

.center {
  margin: auto;
}

#bpm-control {
  & svg rect {
    transform: scaleY(0.6);
    y: 25;
    rx: 5;
    ry: 10;
  }
}

.disable-mouse {
  pointer-events: none;
}
